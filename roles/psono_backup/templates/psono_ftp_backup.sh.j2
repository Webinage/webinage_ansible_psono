#!/bin/bash

BACKUP_LOCAL_DIR="{{ psono_ftp_backup_local_dir }}"
BACKUP_LOCAL_DIR_DB="${BACKUP_LOCAL_DIR}/database"
BACKUP_LOCAL_DIR_FILES="${BACKUP_LOCAL_DIR}/files"
BACKUP_DB_FILENAME="psono_dump_$(date '+%Y_%m_%d_%H_%M_%S').sql"
BACKUP_FILES_FILENAME="psono_files_$(date '+%Y_%m_%d_%H_%M_%S').tar.gz"
UPLOAD_FTP_DESTINATION="${HOSTNAME}"
UPLOAD_FTP_DBDUMP_DESTINATION="${UPLOAD_FTP_DESTINATION}/database"
UPLOAD_FTP_FILES_DESTINATION="${UPLOAD_FTP_DESTINATION}/files"
UPLOAD_FTP_MOUNT_DIR="${BACKUP_LOCAL_DIR}/ftp_mounts"

mkdir -p "${BACKUP_LOCAL_DIR_DB}"
mkdir -p "${BACKUP_LOCAL_DIR_FILES}"

docker run -e "PGPASSWORD={{ psono_postgres_password }}" --network {{ psono_docker_network_name }} --rm --entrypoint pg_dump postgres -h {{ psono_postgres_container_hostname }} -U {{ psono_postgres_user }} -p 5432 {{ psono_postgres_database_name }} > "${BACKUP_LOCAL_DIR_DB}/${BACKUP_DB_FILENAME}"

tar -zcf "${BACKUP_LOCAL_DIR_FILES}/${BACKUP_FILES_FILENAME}" {{ psono_fileserver_data_path }}

mkdir -p "${UPLOAD_FTP_MOUNT_DIR}"
mkdir -p "${UPLOAD_FTP_MOUNT_DIR}/ftp1"

curlftpfs -o 'user={{ psono_ftp_backup_user }}:{{ psono_ftp_backup_password }}' '{{ psono_ftp_backup_host }}' "${UPLOAD_FTP_MOUNT_DIR}/ftp1"
if [ $? -eq 0 ]
then echo ftp1 mounted
    mkdir -p "${UPLOAD_FTP_MOUNT_DIR}/ftp1/${UPLOAD_FTP_DBDUMP_DESTINATION}"
    mkdir -p "${UPLOAD_FTP_MOUNT_DIR}/ftp1/${UPLOAD_FTP_FILES_DESTINATION}"
    cp "${BACKUP_LOCAL_DIR_DB}/${BACKUP_DB_FILENAME}" "${UPLOAD_FTP_MOUNT_DIR}/ftp1/${UPLOAD_FTP_DBDUMP_DESTINATION}/"
    cp "${BACKUP_LOCAL_DIR_FILES}/${BACKUP_FILES_FILENAME}" "${UPLOAD_FTP_MOUNT_DIR}/ftp1/${UPLOAD_FTP_FILES_DESTINATION}/"

    # Cleanup remote DB backups older than 3 month except on the 1st of every month
    find "${UPLOAD_FTP_MOUNT_DIR}/ftp1/${UPLOAD_FTP_DBDUMP_DESTINATION}/" -type f -mtime +90 ! -name 'psono_dump_20??_??_01_01**' -name 'psono_dump_*.sql' -exec rm {} \;

    # Cleanup remote file backups older than 15 days except on the 1st of every month
    find "${UPLOAD_FTP_MOUNT_DIR}/ftp1/${UPLOAD_FTP_FILES_DESTINATION}/" -type f -mtime +15 ! -name 'psono_files_20??_??_01_01*' -name 'psono_files_*.tar.gz' -exec rm {} \;

    fusermount -u "${UPLOAD_FTP_MOUNT_DIR}/ftp1"
fi

rmdir "${UPLOAD_FTP_MOUNT_DIR}/ftp1"


# Cleanup DB backups older than 3 month except on the 1st of every month
find "${BACKUP_LOCAL_DIR_DB}" -type f -mtime +90 ! -name 'psono_dump_20??_??_01_01**' -name 'psono_dump_*.sql' -exec rm {} \;

# Cleanup file backups older than 15 days except on the 1st of every month
find "${BACKUP_LOCAL_DIR_FILES}" -type f -mtime +15 ! -name 'psono_files_20??_??_01_01*' -name 'psono_files_*.tar.gz' -exec rm {} \;
